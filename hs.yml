---
- name: Install Docker
  hosts: all
  become: true
  tasks:
    - name: Install apt-transport-https
      ansible.builtin.apt:
        name:
          - apt-transport-https
          - ca-certificates
          - lsb-release
          - gnupg
        state: latest
        update_cache: true

    - name: Add signing key
      ansible.builtin.apt_key:
        url: "https://download.docker.com/linux/{{ ansible_distribution | lower }}/gpg"
        state: present

    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: "deb [arch={{ ansible_architecture }}] https://download.docker.com/linux/{{ ansible_distribution | lower }} {{ ansible_distribution_release }} stable"
        state: present
        filename: docker

    - name: Install Docker
      ansible.builtin.apt:
        name:
          - docker
          - docker.io
          - docker-compose
          - docker-registry
        state: latest
        update_cache: true

- name: Install Caddy
  hosts: all
  become: true
  tasks:
    - name: Install dependencies
      ansible.builtin.apt:
        name:
          - debian-keyring
          - debian-archive-keyring
          - apt-transport-https
        state: latest
        update_cache: true

    - name: Add signing key
      ansible.builtin.apt_key:
        url: "https://dl.cloudsmith.io/public/caddy/stable/gpg.key"

    - name: Add repository into sources list
      ansible.builtin.apt_repository:
        repo: deb https://dl.cloudsmith.io/public/caddy/stable/deb/debian {{ ansible_distribution_release }} main
        filename: caddy

    - name: Install Caddy
      ansible.builtin.apt:
        name: caddy
        state: latest
        update_cache: true

    - name: Copy custom Caddyfile
      template:
        src: caddy/Caddyfile
        dest: /etc/caddy/

    - name: Restart Caddy
      service:
        name: caddy
        state: restarted

- name: Install Homer
  hosts: all
  become: true
  tasks:
    - name: Create Docker container
      community.docker.docker_container:
        name: homer
        image: b4bz/homer
        ports: 8080:8080
        volumes: homer:/www/assets
        restart_policy: unless-stopped

    - name: Copy custom config.yml
      template:
        src: homer/config.yml
        dest: /var/lib/docker/volumes/homer/_data/

    - name: Copy Pi-hole icon
      copy:
        src: homer/pi-hole.png
        dest: /var/lib/docker/volumes/homer/_data/tools/

- name: Install Pi-hole
  hosts: all
  become: true
  tasks:
    - name: create Docker container
      community.docker.docker_container:
        name: pihole
        image: pihole/pihole
        ports:
          - 53:53/tcp
          - 53:53/udp
          - 81:80
        env:
          TZ: "America/New_York"
        volumes:
          - pihole:/etc/pihole
          - dnsmasq.d:/etc/dnsmasq.d
        restart_policy: unless-stopped
